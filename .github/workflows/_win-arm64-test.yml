name: win-arm64-test

on:
  workflow_call:
    inputs:
      build-environment:
        required: true
        type: string
        description: Top-level label for what's being built/tested.
      cuda-version:
        required: false
        type: string
        description: What CUDA version to build with, "cpu" for none.
        default: "cpu"
      sync-tag:
        required: false
        type: string
        default: ""
        description: |
          If this is set, our linter will use this to make sure that every other
          job with the same `sync-tag` is identical.
      timeout-minutes:
        required: false
        type: number
        default: 240
        description: |
          Set the maximum (in minutes) how long the workflow should take to finish
      runner:
        required: false
        type: string
        default: windows-11-arm64
        description: |
          Label of the runner this job should run on.
          
env:
  GIT_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
  PYTHON_VERSION: "3.12"
  PYTORCH_ROOT: ${{ github.workspace }}/pytorch
  DOWNLOADS_DIR: c:\temp\downloads
  DEPENDENCIES_DIR: c:\temp\dependencies
  
jobs:
  test:
    # Don't run on forked repos or empty test matrix
    if: github.repository_owner == 'pytorch'
    strategy:
      fail-fast: false
    runs-on: ${{ inputs.runner }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Git checkout PyTorch
        uses: actions/checkout@v4
        with:
          path: pytorch

      - name: Bootstrap Git
        shell: cmd
        run: |
          "pytorch/.ci/pytorch/windows/arm64/bootstrap_git.bat"

      - name: Remove Pytorch folder
        shell: cmd
        run: |
          rmdir /s /q "%PYTORCH_ROOT%"

      - name: Git checkout PyTorch
        uses: actions/checkout@v4
        with:
          path: pytorch
          submodules: recursive
      
      - name: Bootstrap Python
        shell: cmd
        run: |
          "pytorch/.ci/pytorch/windows/arm64/bootstrap_python.bat"

      - name: Bootstrap Build Tools
        shell: cmd
        run: |
          "pytorch/.ci/pytorch/windows/arm64/bootstrap_buildtools.bat"

      - name: Bootstrap Rust
        shell: cmd
        run: |
          "pytorch/.ci/pytorch/windows/arm64/bootstrap_rust.bat"

      - name: Get workflow job id
        shell: bash
        id: get-job-id
        run: |
          set -eux
          python pytorch/.github/scripts/get_workflow_job_id.py "${GITHUB_RUN_ID}" "${RUNNER_NAME}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Test step time
        id: test-timeout
        shell: bash
        env:
          JOB_TIMEOUT: ${{ matrix.mem_leak_check == 'mem_leak_check' && 600 || inputs.timeout-minutes }}
        run: |
          echo "timeout=$((JOB_TIMEOUT-30))" >> "${GITHUB_OUTPUT}"

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4.1.7  
        with:
            name: ${{ inputs.build-environment }}
            path: C:\${{ github.run_id }}\build-results

      - name: Test
        id: test
        shell: cmd
        timeout-minutes: ${{ fromJson(steps.test-timeout.outputs.timeout) }}
        env:
          USE_CUDA: '0'
          INSTALL_WINDOWS_SDK: 1
          PYTHON_VERSION: "3.12"
          VC_PRODUCT: "BuildTools"
          AWS_DEFAULT_REGION: us-east-1
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_WORKFLOW: ${{ github.workflow }}
          GITHUB_JOB: ${{ github.job }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
          GITHUB_RUN_ATTEMPT: ${{ github.run_attempt }}
          JOB_ID: ${{ steps.get-job-id.outputs.job-id }}
          JOB_NAME: ${{ steps.get-job-id.outputs.job-name }}
          SHA1: ${{ github.event.pull_request.head.sha || github.sha }}
          PYTORCH_FINAL_PACKAGE_DIR: /c/${{ github.run_id }}/build-results/
          BUILD_ENVIRONMENT: ${{ inputs.build-environment }}
          REENABLED_ISSUES: ${{ github.event.pull_request.reenabled-issues }}
        run: |
          pushd "${PYTORCH_FINAL_PACKAGE_DIR}"
          python -mpip install $(echo *.whl)
          popd
          cd pytorch
          
          set GIT_BASH=%DEPENDENCIES_DIR%\git\usr\bin\bash.exe
          set VS_PATH=%DEPENDENCIES_DIR%\VSBuildTools\VC\Auxiliary\Build\vcvarsall.bat

          call "%VS_PATH%" arm64
          "%GIT_BASH%" -c "bash --noprofile --norc .ci/pytorch/win-arm64-test.sh"

          